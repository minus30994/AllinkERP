
-- =============================================
-- AUTHOR: 郭凯斌
-- CREATE DATE: 2013-11-07
-- DESCRIPTION: 预算方案生成报表(报表按控制范围拆分)
-- =============================================

Create Procedure P_Budget_Form_Generate_Time(
-- ADD THE PARAMETERS FOR THE STORED PROCEDURE HERE
@LS_BUDGET_CASE_IDS VARCHAR(4000), -- 预算方案ID集合(格式为 ' ID1 , ID2 ')
@LI_USER_ID INT -- 用户ID
)
AS
BEGIN


-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
-- INTERFERING WITH SELECT STATEMENTS.

SET NOCOUNT ON;

-- INSERT STATEMENTS FOR PROCEDURE HERE

BEGIN TRANSACTION GENBFT

DECLARE @LI_BUDGET_CASE_ID INT -- 预算方案ID

DECLARE @LI_BUDGET_MODEL_ID INT -- 预算模板ID
DECLARE @LS_BUDGET_MODEL_CODE VARCHAR(200) -- 预算模板编码
DECLARE @LS_BUDGET_MODEL_NAME VARCHAR(200) -- 预算模板名称

DECLARE @LI_BUDGET_CENTER_ID INT -- 预算中心ID
DECLARE @LS_BUDGET_CENTER_CODE VARCHAR(200) -- 预算中心编码
DECLARE @LS_BUDGET_CENTER_NAME VARCHAR(200) -- 预算中心名称

DECLARE @LI_BUDGET_FORM_ID INT -- 预算报表ID
DECLARE @LS_BUDGET_FORM_CODE VARCHAR(200) -- 预算报表编码
DECLARE @LS_BUDGET_FORM_NAME VARCHAR(200) -- 预算报表名称
DECLARE @LD_START_DATE DATETIME -- 开始日期
DECLARE @LD_END_DATE DATETIME -- 结束日期
DECLARE @LS_START_DATE VARCHAR(10) -- 开始日期
DECLARE @LS_END_DATE VARCHAR(10) -- 结束日期
DECLARE @LI_START_YEAR INT -- 开始时间年度
DECLARE @LI_END_YEAR INT -- 结束时间年度
DECLARE @LI_TEMP_START_YEAR INT -- 开始时间年度(用于临时表计算)
DECLARE @LI_TEMP_END_YEAR INT -- 结束时间年度(用于临时表计算)
DECLARE @LS_YEAR_START_DATE VARCHAR(10)
DECLARE @LS_YEAR_END_DATE VARCHAR(10)
DECLARE @LS_LOOP_START_DATE VARCHAR(10)
DECLARE @LS_LOOP_END_DATE VARCHAR(10)
DECLARE @LS_FORM_START_DATE VARCHAR(10)
DECLARE @LS_FORM_END_DATE VARCHAR(10)
DECLARE @LI_YEAR_TARGET TINYINT
DECLARE @LD_YEAR_TARGET_START_DATE DATETIME
DECLARE @LD_YEAR_TARGET_END_DATE DATETIME
DECLARE @LS_YEAR_TARGET_START_DATE VARCHAR(10)
DECLARE @LS_YEAR_TARGET_END_DATE VARCHAR(10)
DECLARE @LI_FORM_TIME TINYINT

DECLARE @LI_ROW INT
DECLARE @LS_COLUMN VARCHAR(200)
DECLARE @LI_BUDGET_ITEM_ID INT
DECLARE @LI_ASSISTANT_ITEM_ID INT
DECLARE @LS_ACCOUNT_YEAR_NEW VARCHAR(4)
DECLARE @LS_ACCOUNT_YEAR_OLD VARCHAR(4)
DECLARE @LS_ACCOUNT_PERIOD VARCHAR(2)
DECLARE @LS_ACCOUNT_SEASON VARCHAR(2)

DECLARE @LI_DETAIL_TIME TINYINT
DECLARE @LS_VALUE_FORMULA VARCHAR(4000)
DECLARE @LS_EXPRESSION VARCHAR(4000)
DECLARE @LS_SQL NVARCHAR(4000)

DECLARE @LS_TEMP_DATE VARCHAR(10)
DECLARE @LS_TEMP_YEAR VARCHAR(4)
DECLARE @LS_TEMP_MONTH VARCHAR(2)
DECLARE @LI_POSITION_LEFT INT
DECLARE @LI_POSITION_RIGHT INT
DECLARE @LS_PARAMETER VARCHAR(200)
DECLARE @LD_TEMP_VALUE MONEY
DECLARE @LS_TEMP_START_DATE VARCHAR(10)
DECLARE @LS_TEMP_END_DATE VARCHAR(10)
DECLARE @LS_TEMP_COLUMN VARCHAR(200)
DECLARE @LS_TEMP_TIME VARCHAR(200)
DECLARE @LI_TEMP_BUDGET_ITEM_ID INT

-- 往预算报表金额表增加新申请的辅助项目
INSERT INTO T_BUDGET_FORM_VALUE(
FID,
FROW,
FCOLUMN,
FBUDGET_ITEM_ID,
FASSISTANT_ITEM_ID
)
SELECT
A.FID,
B.FROW,
B.FCOLUMN,
A.FBUDGET_ITEM_ID,
A.FASSISTANT_ITEM_ID
FROM (
SELECT
ISNULL(YTSH.FYEAR,0) 'FYEAR',
FH.FID 'FID',
FH.FBUDGET_CENTER_ID 'FBUDGET_CENTER_ID',
FD.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
ISNULL(YTSD.FASSISTANT_ITEM_ID,0) 'FASSISTANT_ITEM_ID'
FROM T_BUDGET_CASE_HEADER CH WITH(NOLOCK)
INNER JOIN T_BUDGET_CASE_CENTER CC WITH(NOLOCK) ON CC.FBUDGET_CASE_ID=CH.FID
INNER JOIN T_BUDGET_FORM_HEADER FH WITH(NOLOCK) ON
1=1
AND FH.FBUDGET_CENTER_ID=CC.FBUDGET_CENTER_ID
AND CONVERT(VARCHAR(10),FH.FSTART_DATE,20)>=CONVERT(VARCHAR(10),CH.FYEAR_TARGET_START_DATE,20)
AND CONVERT(VARCHAR(10),FH.FEND_DATE,20)<=CONVERT(VARCHAR(10),CH.FYEAR_TARGET_END_DATE,20)
INNER JOIN T_BUDGET_FORM_DETAIL FD WITH(NOLOCK) ON FD.FID=FH.FID
INNER JOIN T_BUDGET_YEAR_TARGET_SUBMIT_H YTSH WITH(NOLOCK) ON
1=1
AND YTSH.FBUDGET_CENTER_ID=FH.FBUDGET_CENTER_ID
AND ISNULL(YTSH.FSTATE,0)=2
AND ISNULL(YTSH.FYEAR,0)=YEAR(FH.FSTART_DATE)
INNER JOIN T_BUDGET_YEAR_TARGET_SUBMIT_D YTSD WITH(NOLOCK) ON
1=1
AND YTSD.FID=YTSH.FID
AND YTSD.FBUDGET_ITEM_ID=FD.FBUDGET_ITEM_ID
AND ISNULL(YTSD.FASSISTANT_ITEM_ID,0)>0
WHERE
1=1
AND CHARINDEX(' '+CONVERT(VARCHAR(200),CH.FID)+' ',@LS_BUDGET_CASE_IDS)>0
AND (NOT EXISTS(
SELECT
1
FROM T_BUDGET_FORM_VALUE FV WITH(NOLOCK)
WHERE
1=1
AND FV.FID=FH.FID
AND FV.FBUDGET_ITEM_ID=FD.FBUDGET_ITEM_ID
AND ISNULL(FV.FASSISTANT_ITEM_ID,0)=ISNULL(YTSD.FASSISTANT_ITEM_ID,0)
))
GROUP BY
ISNULL(YTSH.FYEAR,0),
FH.FID,
FH.FBUDGET_CENTER_ID,
FD.FBUDGET_ITEM_ID,
ISNULL(YTSD.FASSISTANT_ITEM_ID,0)
) A
INNER JOIN (
SELECT
FV.FID 'FID',
FV.FROW 'FROW',
FV.FCOLUMN 'FCOLUMN'
FROM T_BUDGET_FORM_VALUE FV
GROUP BY
FV.FID,
FV.FROW,
FV.FCOLUMN
) B ON B.FID=A.FID

IF NOT @@ERROR=0
BEGIN
	
	ROLLBACK TRANSACTION GENBFT
	
	RETURN
END

-- 先将查询所选预算方案(按预算方案,预算模板，预算中心，预算项目的控制范围分组)
DECLARE C_HEADER CURSOR FOR
SELECT
QB.FBUDGET_CASE_ID 'FBUDGET_CASE_ID',
CH.FSTART_DATE 'FSTART_DATE',
CH.FEND_DATE 'FEND_DATE',
CH.FYEAR_TARGET 'FYEAR_TARGET',
CH.FYEAR_TARGET_START_DATE 'FYEAR_TARGET_START_DATE',
CH.FYEAR_TARGET_END_DATE 'FYEAR_TARGET_END_DATE',
QB.FBUDGET_MODEL_ID 'FBUDGET_MODEL_ID',
MH.FNO 'FBUDGET_MODEL_CODE',
CASE ISNULL(QB.FTIME,0)
WHEN 0 THEN MH.FNAME+' (按年度控制)'
WHEN 1 THEN MH.FNAME+' (按季度控制)'
WHEN 2 THEN MH.FNAME+' (按月度控制)'
END 'FBUDGET_MODEL_NAME',
QB.FBUDGET_CENTER_ID 'FBUDGET_CENTER_ID',
C.FNO 'FBUDGET_CENTER_CODE',
C.FNAME 'FBUDGET_CENTER_NAME',
QB.FTIME 'FTIME'
FROM
(
SELECT
QA.FBUDGET_CASE_ID 'FBUDGET_CASE_ID',
QA.FBUDGET_MODEL_ID 'FBUDGET_MODEL_ID',
QA.FBUDGET_CENTER_ID 'FBUDGET_CENTER_ID',
QA.FTIME 'FTIME'
FROM
(
SELECT
CD.FID 'FBUDGET_CASE_ID',
CD.FBUDGET_MODEL_ID 'FBUDGET_MODEL_ID',
CC.FBUDGET_CENTER_ID 'FBUDGET_CENTER_ID',
MD.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
CASE
WHEN (CI.FTIME IS NULL) OR (ISNULL(CI.FTIME,0)<0) THEN ISNULL(I.FTIME,0)
ELSE ISNULL(CI.FTIME,0)
END 'FTIME'
FROM T_BUDGET_CASE_CENTER CC WITH(NOLOCK)
INNER JOIN T_BUDGET_CASE_DETAIL CD WITH(NOLOCK) ON CD.FID=CC.FBUDGET_CASE_ID
INNER JOIN T_BUDGET_MODEL_DETAIL MD WITH(NOLOCK) ON MD.FID=CD.FBUDGET_MODEL_ID
LEFT JOIN T_BUDGET_CENTER_ITEM CI WITH(NOLOCK) ON CI.FBUDGET_CENTER_ID=CC.FBUDGET_CENTER_ID AND CI.FBUDGET_ITEM_ID=MD.FBUDGET_ITEM_ID
LEFT JOIN T_BUDGET_ITEM I WITH(NOLOCK) ON I.FID=MD.FBUDGET_ITEM_ID
WHERE
1=1
AND CHARINDEX(' '+CONVERT(VARCHAR(200),CC.FBUDGET_CASE_ID)+' ',@LS_BUDGET_CASE_IDS)>0
) QA
GROUP BY
QA.FBUDGET_CASE_ID,
QA.FBUDGET_MODEL_ID,
QA.FBUDGET_CENTER_ID,
QA.FTIME
) QB
INNER JOIN T_BUDGET_CASE_HEADER CH WITH(NOLOCK) ON CH.FID=QB.FBUDGET_CASE_ID
INNER JOIN T_BUDGET_MODEL_HEADER MH WITH(NOLOCK) ON MH.FID=QB.FBUDGET_MODEL_ID
INNER JOIN T_BUDGET_CENTER C WITH(NOLOCK) ON C.FID=QB.FBUDGET_CENTER_ID
WHERE
1=1
AND (
(
DATEDIFF(MONTH,CONVERT(VARCHAR(10),CH.FSTART_DATE,21),CONVERT(VARCHAR(10),CH.FEND_DATE,21))>=11
AND QB.FTIME IN (0,1,2)
) OR 
(
DATEDIFF(MONTH,CONVERT(VARCHAR(10),CH.FSTART_DATE,21),CONVERT(VARCHAR(10),CH.FEND_DATE,21))>=2
AND QB.FTIME IN (1,2)
) OR 
(
DATEDIFF(MONTH,CONVERT(VARCHAR(10),CH.FSTART_DATE,21),CONVERT(VARCHAR(10),CH.FEND_DATE,21))>=0
AND QB.FTIME IN (2)
)
)
ORDER BY
QB.FBUDGET_CASE_ID,
QB.FBUDGET_CENTER_ID,
QB.FBUDGET_MODEL_ID,
QB.FTIME

OPEN C_HEADER

FETCH NEXT FROM C_HEADER
INTO
@LI_BUDGET_CASE_ID,
@LD_START_DATE,
@LD_END_DATE,
@LI_YEAR_TARGET,
@LD_YEAR_TARGET_START_DATE,
@LD_YEAR_TARGET_END_DATE,
@LI_BUDGET_MODEL_ID,
@LS_BUDGET_MODEL_CODE,
@LS_BUDGET_MODEL_NAME,
@LI_BUDGET_CENTER_ID,
@LS_BUDGET_CENTER_CODE,
@LS_BUDGET_CENTER_NAME,
@LI_FORM_TIME

-- 创建[预算项目及其开始/结束日期临时表]
CREATE TABLE #T_TEMP_BUDGET_ITEM(
FBUDGET_ITEM_ID INT NULL, -- 预算项目ID
FASSISTANT_ITEM_ID INT NULL, -- 辅助项目ID
FSTART_DATE VARCHAR(10) NULL, -- 开始日期
FEND_DATE VARCHAR(10) NULL -- 结束日期
)

CREATE TABLE #T_TEMP_FORM_PERIOD(
FID INT NULL, -- 预算报表ID
FROW INT NULL, -- 行号
FCOLUMN VARCHAR(200) NULL -- 期间
)

WHILE @@FETCH_STATUS=0
BEGIN
	
	SET @LS_START_DATE=CONVERT(VARCHAR(10),@LD_START_DATE,21)
	SET @LS_END_DATE=CONVERT(VARCHAR(10),@LD_END_DATE,21)
	SET @LS_YEAR_TARGET_START_DATE=CONVERT(VARCHAR(10),@LD_YEAR_TARGET_START_DATE,21)
	SET @LS_YEAR_TARGET_END_DATE=CONVERT(VARCHAR(10),@LD_YEAR_TARGET_END_DATE,21)
	
	-- 开始日期的年度
	SET @LI_START_YEAR=ISNULL((
	SELECT
	FYEAR
	FROM T_ACCOUNTPERIOD WITH(NOLOCK)
	WHERE
	1=1
	AND CONVERT(VARCHAR(10),FBEGDATE,21)<=@LS_START_DATE
	AND CONVERT(VARCHAR(10),FENDDATE,21)>=@LS_START_DATE
	),0)
	
	-- 结束日期的年度
	SET @LI_END_YEAR=ISNULL((
	SELECT
	FYEAR
	FROM T_ACCOUNTPERIOD WITH(NOLOCK)
	WHERE
	1=1
	AND CONVERT(VARCHAR(10),FBEGDATE,21)<=@LS_END_DATE
	AND CONVERT(VARCHAR(10),FENDDATE,21)>=@LS_END_DATE
	),0)
	
	-- 每次循环先清空[预算项目及其开始/结束日期临时表]
	TRUNCATE TABLE #T_TEMP_BUDGET_ITEM
	
	-- 根据预算模板ID和控制范围查询对应的预算项目，增加到[预算项目及其开始/结束日期临时表]
	-- 如果没有增加任何数据则跳过这行
	INSERT INTO #T_TEMP_BUDGET_ITEM(
	FBUDGET_ITEM_ID,
	FASSISTANT_ITEM_ID
	)
	SELECT
	A.FBUDGET_ITEM_ID,
	A.FASSISTANT_ITEM_ID
	FROM                                    
	(
	SELECT
	MD.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
	ISNULL(AI.FASSISTANT_ITEM_ID,0) 'FASSISTANT_ITEM_ID',
	CASE
	WHEN (CI.FTIME IS NULL) OR (ISNULL(CI.FTIME,0)<0) THEN ISNULL(I.FTIME,0)
	ELSE ISNULL(CI.FTIME,0)
	END 'FTIME'
	FROM T_BUDGET_MODEL_DETAIL MD WITH(NOLOCK)
	LEFT JOIN T_BUDGET_CENTER_ITEM CI WITH(NOLOCK) ON CI.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID AND CI.FBUDGET_ITEM_ID=MD.FBUDGET_ITEM_ID
	LEFT JOIN T_BUDGET_ITEM I WITH(NOLOCK) ON I.FID=MD.FBUDGET_ITEM_ID
	LEFT JOIN (
	SELECT
	YTSD.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
	YTSD.FASSISTANT_ITEM_ID 'FASSISTANT_ITEM_ID'
	FROM T_BUDGET_YEAR_TARGET_SUBMIT_H YTSH WITH(NOLOCK)
	INNER JOIN T_BUDGET_YEAR_TARGET_SUBMIT_D YTSD WITH(NOLOCK) ON YTSD.FID=YTSH.FID
	WHERE
	1=1
	AND ISNULL(YTSH.FSTATE,0)=2
	AND ISNULL(YTSH.FYEAR,0)=CAST(LEFT(@LS_YEAR_TARGET_START_DATE,4) AS INT)
	AND YTSH.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
	GROUP BY
	YTSD.FBUDGET_ITEM_ID,
	YTSD.FASSISTANT_ITEM_ID
	) AI ON AI.FBUDGET_ITEM_ID=MD.FBUDGET_ITEM_ID
	WHERE
	MD.FID=@LI_BUDGET_MODEL_ID
	) A
	WHERE
	A.FTIME=@LI_FORM_TIME
	GROUP BY
	A.FBUDGET_ITEM_ID,
	A.FASSISTANT_ITEM_ID
	
	IF NOT @@ROWCOUNT>0
	BEGIN
		FETCH NEXT FROM C_HEADER
		INTO
		@LI_BUDGET_CASE_ID,
		@LD_START_DATE,
		@LD_END_DATE,
		@LI_YEAR_TARGET,
		@LD_YEAR_TARGET_START_DATE,
		@LD_YEAR_TARGET_END_DATE,
		@LI_BUDGET_MODEL_ID,
		@LS_BUDGET_MODEL_CODE,
		@LS_BUDGET_MODEL_NAME,
		@LI_BUDGET_CENTER_ID,
		@LS_BUDGET_CENTER_CODE,
		@LS_BUDGET_CENTER_NAME,
		@LI_FORM_TIME
		
		CONTINUE
	END
	
	-- 如果开始/结束日期的年度不为空,则设置[预算项目及其开始/结束日期临时表]的开始/结束日期
	IF (NOT @LI_START_YEAR IS NULL) AND @LI_START_YEAR>0 AND (NOT @LI_END_YEAR IS NULL) AND @LI_END_YEAR>0
	BEGIN
		DECLARE C_TEMP_BUDGET_ITEM_SET_DATE CURSOR FOR
		SELECT
		FBUDGET_ITEM_ID,
		FASSISTANT_ITEM_ID
		FROM #T_TEMP_BUDGET_ITEM WITH(NOLOCK)
		
		OPEN C_TEMP_BUDGET_ITEM_SET_DATE
		
		FETCH NEXT FROM C_TEMP_BUDGET_ITEM_SET_DATE
		INTO @LI_BUDGET_ITEM_ID,@LI_ASSISTANT_ITEM_ID
		
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			-- 如果预算项目ID为空则跳过这行
			IF (NOT @LI_BUDGET_ITEM_ID>0) OR @LI_BUDGET_ITEM_ID IS NULL
			BEGIN
				FETCH NEXT FROM C_TEMP_BUDGET_ITEM_SET_DATE
				INTO @LI_BUDGET_ITEM_ID
				
				CONTINUE
			END
			
			IF (NOT @LI_START_YEAR>0) OR @LI_START_YEAR IS NULL OR
			(NOT @LI_END_YEAR>0) OR @LI_END_YEAR IS NULL
			BEGIN
				FETCH NEXT FROM C_TEMP_BUDGET_ITEM_SET_DATE
				INTO @LI_BUDGET_ITEM_ID
				
				CONTINUE
			END
			
			SET @LI_TEMP_START_YEAR=@LI_START_YEAR
			SET @LI_TEMP_END_YEAR=@LI_END_YEAR
			
			SET @LS_FORM_START_DATE=''
			SET @LS_FORM_END_DATE=''
			
			-- 从开始日期到结束日期循环，计算出报表的开始，结束日期
			WHILE @LI_TEMP_START_YEAR<=@LI_TEMP_END_YEAR
			BEGIN
				
				SET @LS_YEAR_START_DATE=''
				SET @LS_YEAR_END_DATE=''
				SET @LS_LOOP_START_DATE=''
				SET @LS_LOOP_END_DATE=''
				
				-- 获取这个年度的开始日期
				SET @LS_YEAR_START_DATE=(
				SELECT
				CONVERT(VARCHAR(10),MIN(FBEGDATE),21)
				FROM T_ACCOUNTPERIOD WITH(NOLOCK)
				WHERE
				FYEAR=@LI_TEMP_START_YEAR
				)
				
				-- 获取这个年度的结束日期
				SET @LS_YEAR_END_DATE=(
				SELECT
				CONVERT(VARCHAR(10),MAX(FENDDATE),21)
				FROM T_ACCOUNTPERIOD WITH(NOLOCK)
				WHERE
				FYEAR=@LI_TEMP_START_YEAR
				)
				
				-- 如果年度开始/结束日期获取不到，则跳过这个年度
				IF @LS_YEAR_START_DATE='' OR @LS_YEAR_START_DATE IS NULL OR
				@LS_YEAR_END_DATE='' OR @LS_YEAR_END_DATE IS NULL
				BEGIN
					SET @LI_TEMP_START_YEAR=@LI_TEMP_START_YEAR+1
					CONTINUE
				END
				
				-- 如果控制范围是[年]，但年度开始日期<开始日期 或 年度结束日期>结束日期 或 开始日期和结束日期之间小于11个月，则跳过这个年度
				-- 赋值循环开始日期=年度开始日期，循环结束日期=年度结束日期
				IF @LI_FORM_TIME=0
				BEGIN
					IF @LS_START_DATE>@LS_YEAR_START_DATE OR @LS_END_DATE<@LS_YEAR_END_DATE OR
					DATEDIFF(MONTH,@LS_START_DATE,@LS_END_DATE)<11
					BEGIN
						SET @LI_TEMP_START_YEAR=@LI_TEMP_START_YEAR+1
						CONTINUE
					END
					
					SET @LS_LOOP_START_DATE=@LS_YEAR_START_DATE
					SET @LS_LOOP_END_DATE=@LS_YEAR_END_DATE
				END
				
				-- 如果控制范围是[季]，但开始日期和结束日期之间小于2个月，则跳过这个年度
				-- 赋值循环开始日期=年度开始日期，循环结束日期=第一季度最后一天
				IF @LI_FORM_TIME=1
				BEGIN
					IF DATEDIFF(MONTH,@LS_START_DATE,@LS_END_DATE)<2
					BEGIN
						SET @LI_TEMP_START_YEAR=@LI_TEMP_START_YEAR+1
						CONTINUE
					END
					
					SET @LS_LOOP_START_DATE=@LS_YEAR_START_DATE
					SET @LS_LOOP_END_DATE=CONVERT(VARCHAR(10),DATEADD(DAY,-1,CONVERT(VARCHAR(7),DATEADD(MONTH,3,@LS_YEAR_START_DATE),21)+'-01'),21)
				END
				
				-- 如果控制范围是[其]，但开始日期和结束日期之间小于0个月，则跳过这个年度
				-- 赋值循环开始日期=年度开始日期，循环结束日期=年度开始日期所在月份的最后一天
				IF @LI_FORM_TIME=2
				BEGIN
					IF DATEDIFF(MONTH,@LS_START_DATE,@LS_END_DATE)<0
					BEGIN
						SET @LI_TEMP_START_YEAR=@LI_TEMP_START_YEAR+1
						CONTINUE
					END
					
					SET @LS_LOOP_START_DATE=@LS_YEAR_START_DATE
					SET @LS_LOOP_END_DATE=CONVERT(VARCHAR(10),DATEADD(DAY,-1,CONVERT(VARCHAR(7),DATEADD(MONTH,1,@LS_YEAR_START_DATE),21)+'-01'),21)
				END
				
				-- 根据控制范围循环向后移动循环开始日期和循环结束日期，直到这个时间段内该预算项目没有做过报表，且循环开始开始日期>开始日期
				WHILE (EXISTS(
				SELECT
				*
				FROM T_BUDGET_FORM_DETAIL FD WITH(NOLOCK)
				INNER JOIN T_BUDGET_FORM_HEADER FH WITH(NOLOCK) ON FH.FID=FD.FID
				WHERE
				1=1
				AND CONVERT(VARCHAR(10),FH.FSTART_DATE,21)>=@LS_LOOP_START_DATE
				AND CONVERT(VARCHAR(10),FH.FEND_DATE,21)<=@LS_LOOP_END_DATE
				AND FH.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
				AND FD.FBUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
				AND FD.FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
				)
				) OR @LS_LOOP_START_DATE<@LS_START_DATE
				BEGIN
					SET @LS_LOOP_START_DATE=CONVERT(VARCHAR(10),DATEADD(DAY,1,@LS_LOOP_END_DATE),21)
					
					IF @LI_FORM_TIME=0
					BEGIN
						SET @LS_LOOP_END_DATE=CONVERT(VARCHAR(10),DATEADD(DAY,-1,CONVERT(VARCHAR(7),DATEADD(MONTH,12,@LS_LOOP_START_DATE),21)+'-01'),21)
					END
					IF @LI_FORM_TIME=1
					BEGIN
						SET @LS_LOOP_END_DATE=CONVERT(VARCHAR(10),DATEADD(DAY,-1,CONVERT(VARCHAR(7),DATEADD(MONTH,3,@LS_LOOP_START_DATE),21)+'-01'),21)
					END
					IF @LI_FORM_TIME=2
					BEGIN
						SET @LS_LOOP_END_DATE=CONVERT(VARCHAR(10),DATEADD(DAY,-1,CONVERT(VARCHAR(7),DATEADD(MONTH,1,@LS_LOOP_START_DATE),21)+'-01'),21)
					END
				END
				
				-- 如果循环开始/结束日期在开始/结束日期范围内，则报表开始/结束日期=循环开始/结束日期
				IF @LS_LOOP_START_DATE>=@LS_START_DATE AND @LS_LOOP_END_DATE<=@LS_END_DATE
				BEGIN
					SET @LS_FORM_START_DATE=@LS_LOOP_START_DATE
					SET @LS_FORM_END_DATE=@LS_LOOP_END_DATE
					
					BREAK
				END
				
				SET @LI_TEMP_START_YEAR=@LI_TEMP_START_YEAR+1
			END
			
			-- 更新这个预算项目在[预算项目及其开始/结束日期临时表]的开始/结束日期=报表开始/结束日期
			IF LEN(@LS_FORM_START_DATE)>0 AND (NOT @LS_FORM_START_DATE IS NULL)
			AND LEN(@LS_FORM_END_DATE)>0 AND (NOT @LS_FORM_END_DATE IS NULL)
			BEGIN
				UPDATE #T_TEMP_BUDGET_ITEM
				SET FSTART_DATE=@LS_FORM_START_DATE,
				FEND_DATE=@LS_FORM_END_DATE
				WHERE
				1=1
				AND FBUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
				AND ISNULL(FASSISTANT_ITEM_ID,0)=@LI_ASSISTANT_ITEM_ID
			END
			
			FETCH NEXT FROM C_TEMP_BUDGET_ITEM_SET_DATE
			INTO @LI_BUDGET_ITEM_ID,@LI_ASSISTANT_ITEM_ID
		END
		
		CLOSE C_TEMP_BUDGET_ITEM_SET_DATE
		DEALLOCATE C_TEMP_BUDGET_ITEM_SET_DATE	
	END
	
	SET @LS_FORM_START_DATE=''
	SET @LS_FORM_END_DATE=''
	
	-- 根据[预算项目及其开始/结束日期临时表]的数据，按开始/结束日期分组生成预算报表
	DECLARE C_HEADER_TIME CURSOR FOR
	SELECT
	FSTART_DATE,
	FEND_DATE,
	CASE
		WHEN DATEDIFF(MONTH,FSTART_DATE,FEND_DATE)=0 THEN 2
		WHEN DATEDIFF(MONTH,FSTART_DATE,FEND_DATE)>0 And DATEDIFF(MONTH,FSTART_DATE,FEND_DATE)<=2 THEN 1
		WHEN DATEDIFF(MONTH,FSTART_DATE,FEND_DATE)>2 And DATEDIFF(MONTH,FSTART_DATE,FEND_DATE)<=11 THEN 0
	END FFORM_TIME
	FROM #T_TEMP_BUDGET_ITEM WITH(NOLOCK)
	WHERE
	1=1
	AND LEN(FSTART_DATE)>0 AND (NOT FSTART_DATE IS NULL)
	AND LEN(FEND_DATE)>0 AND (NOT FEND_DATE IS NULL)
	GROUP BY
	FSTART_DATE,
	FEND_DATE
	
	OPEN C_HEADER_TIME
	
	FETCH NEXT FROM C_HEADER_TIME
	INTO @LS_FORM_START_DATE,@LS_FORM_END_DATE,@LI_FORM_TIME
	
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @LI_BUDGET_FORM_ID=0
		SET @LS_BUDGET_FORM_CODE=''
		SET @LS_BUDGET_FORM_NAME=''
		
		-- 获取预算报表表头ID
		
		IF EXISTS(SELECT * FROM T_TABLEID WITH(NOLOCK) WHERE FTABLE='T_BUDGET_FORM_HEADER')
		BEGIN
			SET @LI_BUDGET_FORM_ID=(SELECT ISNULL(FCURRID,1000)+1 FROM T_TABLEID WITH(NOLOCK) WHERE FTABLE='T_BUDGET_FORM_HEADER')
			
			UPDATE T_TABLEID SET FCURRID=@LI_BUDGET_FORM_ID WHERE FTABLE='T_BUDGET_FORM_HEADER'
		END
		ELSE
		BEGIN
			INSERT INTO T_TABLEID VALUES('T_BUDGET_FORM_HEADER',1000)
			SET @LI_BUDGET_FORM_ID=1000
		END
		
		-- 获取预算报表表头编码,名称
		SET @LS_BUDGET_FORM_NAME=@LS_BUDGET_MODEL_NAME
		SET @LS_BUDGET_FORM_CODE=REPLACE(CONVERT(VARCHAR(10),GETDATE(),21),'-','')+CONVERT(VARCHAR(10),@LI_BUDGET_FORM_ID)
		
		-- 增加预算报表表头数据
		INSERT INTO T_BUDGET_FORM_HEADER(
		FID,
		FNO,
		FNAME,
		FREMARK,
		FBUDGET_CENTER_ID,
		FSTATE,
		FCREATE_ID,
		FCREATE_DATE,
		FSTART_DATE,
		FEND_DATE,
		FLEVEL,
		FCONFIRM_ID,
		FCONFIRM_DATE,
		FYEAR_TARGET,
		FYEAR_TARGET_START_DATE,
		FYEAR_TARGET_END_DATE,
		FCONFIRM_STATE
		)
		VALUES(
		@LI_BUDGET_FORM_ID,
		@LS_BUDGET_FORM_CODE,
		@LS_BUDGET_FORM_NAME,
		NULL,
		@LI_BUDGET_CENTER_ID,
		0,
		@LI_USER_ID,
		GETDATE(),
		@LS_FORM_START_DATE,
		@LS_FORM_END_DATE,
		0,
		NULL,
		NULL,
		@LI_YEAR_TARGET,
		@LD_YEAR_TARGET_START_DATE,
		@LD_YEAR_TARGET_END_DATE,
		0
		)
		
		IF NOT @@ERROR=0
		BEGIN
			CLOSE C_HEADER_TIME
			DEALLOCATE C_HEADER_TIME
			
			CLOSE C_HEADER
			DEALLOCATE C_HEADER
			
			ROLLBACK TRANSACTION GENBFT
			
			RETURN
		END
		
		-- 增加预算报表明细数据
		INSERT INTO T_BUDGET_FORM_DETAIL(
		FID,
		FROW,
		FBUDGET_ITEM_ID,
		FASSISTANT_ITEM_ID,
		FVALUE_TYPE,
		FVALUE_FORMULA,
		FTYPE,
		FTIME,
		FFORMULA,
		FREMARK,
		FYEAR_TARGET
		)
		SELECT
		@LI_BUDGET_FORM_ID,
		A.FROW,
		A.FBUDGET_ITEM_ID,
		A.FASSISTANT_ITEM_ID,
		A.FVALUE_TYPE,
		A.FVALUE_FORMULA,
		A.FTYPE,
		A.FTIME,
		A.FFORMULA,
		NULL,
		A.FYEAR_TARGET
		FROM                                    
		(
		SELECT
		MD.FROW 'FROW',
		MD.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
		AI.FASSISTANT_ITEM_ID 'FASSISTANT_ITEM_ID',
		MD.FVALUE_TYPE 'FVALUE_TYPE',
		MD.FVALUE_FORMULA 'FVALUE_FORMULA',
		CASE
		WHEN (CI.FTYPE IS NULL) OR (ISNULL(CI.FTYPE,0)<0) THEN ISNULL(I.FTYPE,0)
		ELSE ISNULL(CI.FTYPE,0)
		END 'FTYPE',
		CASE
		WHEN (CI.FTIME IS NULL) OR (ISNULL(CI.FTIME,0)<0) THEN ISNULL(I.FTIME,0)
		ELSE ISNULL(CI.FTIME,0)
		END 'FTIME',
		CI.FFORMULA,
		AI.FYEAR_TARGET
		FROM #T_TEMP_BUDGET_ITEM T WITH(NOLOCK)
		LEFT JOIN T_BUDGET_MODEL_DETAIL MD WITH(NOLOCK) ON MD.FBUDGET_ITEM_ID=T.FBUDGET_ITEM_ID
		LEFT JOIN T_BUDGET_CENTER_ITEM CI WITH(NOLOCK) ON CI.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID AND CI.FBUDGET_ITEM_ID=MD.FBUDGET_ITEM_ID
		LEFT JOIN T_BUDGET_ITEM I WITH(NOLOCK) ON I.FID=MD.FBUDGET_ITEM_ID
		LEFT JOIN (
		SELECT
		YTSD.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
		ISNULL(YTSD.FASSISTANT_ITEM_ID,0) 'FASSISTANT_ITEM_ID',
		SUM(YTSD.FAUDIT_AMOUNT) 'FYEAR_TARGET'
		FROM T_BUDGET_YEAR_TARGET_SUBMIT_H YTSH WITH(NOLOCK)
		INNER JOIN T_BUDGET_YEAR_TARGET_SUBMIT_D YTSD WITH(NOLOCK) ON YTSD.FID=YTSH.FID
		WHERE
		1=1
		AND ISNULL(YTSH.FSTATE,0)=2
		AND ISNULL(YTSH.FYEAR,0)=CAST(LEFT(@LS_FORM_START_DATE,4) AS INT)
		AND YTSH.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
		GROUP BY
		YTSD.FBUDGET_ITEM_ID,
		YTSD.FASSISTANT_ITEM_ID
		) AI ON AI.FBUDGET_ITEM_ID=T.FBUDGET_ITEM_ID AND AI.FASSISTANT_ITEM_ID=T.FASSISTANT_ITEM_ID
		WHERE
		1=1
		AND MD.FID=@LI_BUDGET_MODEL_ID
		) A
		WHERE
		1=1
		AND A.FTIME=@LI_FORM_TIME
		AND ISNULL(A.FYEAR_TARGET,0)>0
		AND (NOT EXISTS
		(
		SELECT
		*
		FROM T_BUDGET_FORM_DETAIL FD WITH(NOLOCK)
		INNER JOIN T_BUDGET_FORM_HEADER FH WITH(NOLOCK) ON FH.FID=FD.FID
		WHERE
		CONVERT(VARCHAR(10),FH.FSTART_DATE,21)>=@LS_FORM_START_DATE
		AND CONVERT(VARCHAR(10),FH.FEND_DATE,21)<=@LS_FORM_END_DATE
		AND FH.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
		AND FD.FBUDGET_ITEM_ID=A.FBUDGET_ITEM_ID
		AND FD.FASSISTANT_ITEM_ID=A.FASSISTANT_ITEM_ID
		)
		)
		
		IF NOT @@ERROR=0
		BEGIN
			CLOSE C_HEADER_TIME
			DEALLOCATE C_HEADER_TIME
			
			CLOSE C_HEADER
			DEALLOCATE C_HEADER
			
			ROLLBACK TRANSACTION GENBFT
			
			RETURN
		END
		
		IF NOT EXISTS(SELECT * FROM T_BUDGET_FORM_DETAIL WITH(NOLOCK) WHERE FID=@LI_BUDGET_FORM_ID)
		BEGIN

			DELETE T_BUDGET_FORM_HEADER WHERE FID=@LI_BUDGET_FORM_ID
			
			FETCH NEXT FROM C_HEADER_TIME
			INTO @LS_FORM_START_DATE,@LS_FORM_END_DATE,@LI_FORM_TIME
			
			CONTINUE
		END
		
		-- 增加预算报表数值数据
		SET @LI_ROW=0
		SET @LS_COLUMN=''
		SET @LI_BUDGET_ITEM_ID=0
		SET @LS_ACCOUNT_YEAR_NEW=''
		SET @LS_ACCOUNT_YEAR_OLD=''
		SET @LS_ACCOUNT_PERIOD=''
		SET @LS_ACCOUNT_SEASON=''
		SET @LS_TEMP_YEAR=''
		SET @LS_TEMP_MONTH=''
		
		SET @LS_TEMP_DATE=@LS_FORM_START_DATE
		
		TRUNCATE TABLE #T_TEMP_FORM_PERIOD
		
		WHILE @LS_TEMP_DATE<=@LS_FORM_END_DATE
		BEGIN
			
			SET @LS_ACCOUNT_YEAR_NEW=(
			SELECT
			CONVERT(VARCHAR(4),FYEAR)
			FROM T_ACCOUNTPERIOD WITH(NOLOCK)
			WHERE
			CONVERT(VARCHAR(10),FBEGDATE,21)<=@LS_TEMP_DATE
			AND CONVERT(VARCHAR(10),FENDDATE,21)>=@LS_TEMP_DATE
			)
			
			SET @LS_ACCOUNT_PERIOD=(
			SELECT
			RIGHT('0'+CONVERT(VARCHAR(2),FPERIOD),2)
			FROM T_ACCOUNTPERIOD WITH(NOLOCK)
			WHERE
			CONVERT(VARCHAR(10),FBEGDATE,21)<=@LS_TEMP_DATE
			AND CONVERT(VARCHAR(10),FENDDATE,21)>=@LS_TEMP_DATE
			)
			
			IF (NOT LEN(@LS_ACCOUNT_YEAR_NEW)>0) OR (@LS_ACCOUNT_YEAR_NEW IS NULL)
			OR (NOT LEN(@LS_ACCOUNT_PERIOD)>0) OR (@LS_ACCOUNT_PERIOD IS NULL)
			BEGIN
				DELETE T_BUDGET_FORM_VALUE WHERE FID=@LI_BUDGET_FORM_ID
				
				BREAK
			END
			
			IF (NOT LEN(@LS_ACCOUNT_YEAR_OLD)>0) OR (@LS_ACCOUNT_YEAR_OLD IS NULL)
			OR (NOT @LS_ACCOUNT_YEAR_NEW=@LS_ACCOUNT_YEAR_OLD)
			BEGIN
				SET @LI_ROW=@LI_ROW+1
				SET @LS_COLUMN='AY000000'+@LS_ACCOUNT_YEAR_NEW+'00'
				
				INSERT INTO #T_TEMP_FORM_PERIOD(
				FID,
				FROW,
				FCOLUMN
				)
				VALUES(
				@LI_BUDGET_FORM_ID,
				@LI_ROW,
				@LS_COLUMN
				)
				
				SET @LI_ROW=@LI_ROW+1
				SET @LS_COLUMN='BY000000'+@LS_ACCOUNT_YEAR_NEW+'00'
				
				INSERT INTO #T_TEMP_FORM_PERIOD(
				FID,
				FROW,
				FCOLUMN
				)
				VALUES(
				@LI_BUDGET_FORM_ID,
				@LI_ROW,
				@LS_COLUMN
				)
			END
			
			SET @LS_TEMP_YEAR=LEFT(@LS_TEMP_DATE,4)
			SET @LS_TEMP_MONTH=SUBSTRING(@LS_TEMP_DATE,6,2)
			
			SET @LI_ROW=@LI_ROW+1
			SET @LS_COLUMN='AM'+@LS_TEMP_YEAR+@LS_TEMP_MONTH+@LS_ACCOUNT_YEAR_NEW+@LS_ACCOUNT_PERIOD
			
			INSERT INTO #T_TEMP_FORM_PERIOD(
			FID,
			FROW,
			FCOLUMN
			)
			VALUES(
			@LI_BUDGET_FORM_ID,
			@LI_ROW,
			@LS_COLUMN
			)
			
			SET @LI_ROW=@LI_ROW+1
			SET @LS_COLUMN='BM'+@LS_TEMP_YEAR+@LS_TEMP_MONTH+@LS_ACCOUNT_YEAR_NEW+@LS_ACCOUNT_PERIOD
			
			INSERT INTO #T_TEMP_FORM_PERIOD(
			FID,
			FROW,
			FCOLUMN
			)
			VALUES(
			@LI_BUDGET_FORM_ID,
			@LI_ROW,
			@LS_COLUMN
			)
			
			IF @LS_ACCOUNT_PERIOD IN ('01','02','03')
			BEGIN
				SET @LS_ACCOUNT_SEASON='01'
			END
			IF @LS_ACCOUNT_PERIOD IN ('04','05','06')
			BEGIN
				SET @LS_ACCOUNT_SEASON='02'
			END
			IF @LS_ACCOUNT_PERIOD IN ('07','08','09')
			BEGIN
				SET @LS_ACCOUNT_SEASON='03'
			END
			IF @LS_ACCOUNT_PERIOD IN ('10','11','12')
			BEGIN
				SET @LS_ACCOUNT_SEASON='04'
			END
			
			IF @LS_ACCOUNT_PERIOD IN ('03','06','09','12')
			OR LEFT(@LS_TEMP_DATE,7)=LEFT(@LS_FORM_END_DATE,7)
			BEGIN
				SET @LI_ROW=@LI_ROW+1
				SET @LS_COLUMN='AS000000'+@LS_ACCOUNT_YEAR_NEW+@LS_ACCOUNT_SEASON
				
				INSERT INTO #T_TEMP_FORM_PERIOD(
				FID,
				FROW,
				FCOLUMN
				)
				VALUES(
				@LI_BUDGET_FORM_ID,
				@LI_ROW,
				@LS_COLUMN
				)
				
				SET @LI_ROW=@LI_ROW+1
				SET @LS_COLUMN='BS000000'+@LS_ACCOUNT_YEAR_NEW+@LS_ACCOUNT_SEASON
				
				INSERT INTO #T_TEMP_FORM_PERIOD(
				FID,
				FROW,
				FCOLUMN
				)
				VALUES(
				@LI_BUDGET_FORM_ID,
				@LI_ROW,
				@LS_COLUMN
				)
				
			END
			
			SET @LS_TEMP_DATE=CONVERT(VARCHAR(10),DATEADD(MONTH,1,LEFT(@LS_TEMP_DATE,7)+'-01'),21)
			
			SET @LS_ACCOUNT_YEAR_OLD=@LS_ACCOUNT_YEAR_NEW
		END
		
		-- 增加预算报表金额表数据
		INSERT INTO T_BUDGET_FORM_VALUE(
		FID,
		FROW,
		FCOLUMN,
		FVALUE,
		FBUDGET_ITEM_ID,
		FASSISTANT_ITEM_ID
		)
		SELECT
		@LI_BUDGET_FORM_ID,
		FP.FROW,
		FP.FCOLUMN,
		NULL,
		FD.FBUDGET_ITEM_ID,
		ISNULL(FD.FASSISTANT_ITEM_ID,0)
		FROM T_BUDGET_FORM_DETAIL FD WITH(NOLOCK)
		INNER JOIN #T_TEMP_FORM_PERIOD FP WITH(NOLOCK) ON FP.FID=FD.FID
		WHERE
		1=1
		AND FD.FID=@LI_BUDGET_FORM_ID
		AND ISNULL(FD.FYEAR_TARGET,0)>0
		
		IF NOT @@ERROR=0
		BEGIN
			CLOSE C_HEADER_TIME
			DEALLOCATE C_HEADER_TIME
			
			CLOSE C_HEADER
			DEALLOCATE C_HEADER
			
			ROLLBACK TRANSACTION GENBFT
			
			RETURN
		END
		
		IF NOT EXISTS(SELECT * FROM T_BUDGET_FORM_VALUE WITH(NOLOCK) WHERE FID=@LI_BUDGET_FORM_ID)
		BEGIN
			DELETE T_BUDGET_FORM_HEADER WHERE FID=@LI_BUDGET_FORM_ID
			DELETE T_BUDGET_FORM_DETAIL WHERE FID=@LI_BUDGET_FORM_ID
			
			FETCH NEXT FROM C_HEADER_TIME
			INTO @LS_FORM_START_DATE,@LS_FORM_END_DATE,@LI_FORM_TIME
			
			CONTINUE
		END
		
		-- 更新预算报表金额表中的申请数=【年度指标】*【下拨比例】-【已审核的预算数】
		UPDATE T_BUDGET_FORM_VALUE
		SET FVALUE=ISNULL((
		SELECT
		MAX(FD.FYEAR_TARGET)
		FROM T_BUDGET_FORM_DETAIL FD WITH(NOLOCK)
		WHERE
		1=1
		AND FD.FID=T_BUDGET_FORM_VALUE.FID
		AND FD.FBUDGET_ITEM_ID=T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID
		AND ISNULL(FD.FASSISTANT_ITEM_ID,0)=ISNULL(T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID,0)
		),0)
		*
		ISNULL((
		SELECT
		ISNULL(MAX(CI.FALLOCATE),0)
		FROM T_BUDGET_CASE_ITEM CI WITH(NOLOCK)
		WHERE
		1=1
		AND CI.FID=@LI_BUDGET_CASE_ID
		AND CI.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
		AND CI.FBUDGET_ITEM_ID=T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID
		AND ISNULL(CI.FASSISTANT_ITEM_ID,0)=ISNULL(T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID,0)
		AND ISNULL(CI.FALLOCATE_VALUE_TYPE,0)=0
		),0)
		-
		DBO.F_BUDGET_GET_VALUE('总预算',@LI_BUDGET_CENTER_ID,@LS_FORM_END_DATE,T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID,T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID)
		WHERE
		1=1
		AND FID=@LI_BUDGET_FORM_ID
		AND((
		@LI_FORM_TIME=0
		AND UPPER(FCOLUMN) LIKE UPPER('AY%')
		) OR (
		@LI_FORM_TIME=1
		AND (
		UPPER(FCOLUMN) LIKE UPPER('AY%')
		OR UPPER(FCOLUMN) LIKE UPPER('AS%')
		)
		) OR (
		@LI_FORM_TIME=2
		AND UPPER(FCOLUMN) LIKE UPPER('A%')
		)
		)
		AND EXISTS(
		SELECT
		1
		FROM T_BUDGET_CASE_ITEM CI WITH(NOLOCK)
		WHERE
		1=1
		AND CI.FID=@LI_BUDGET_CASE_ID
		AND CI.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
		AND CI.FBUDGET_ITEM_ID=T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID
		AND ISNULL(CI.FASSISTANT_ITEM_ID,0)=ISNULL(T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID,0)
		AND ISNULL(CI.FALLOCATE_VALUE_TYPE,0)=0
		AND ISNULL(CI.FALLOCATE,0)>0
		)
		
		UPDATE T_BUDGET_FORM_VALUE
		SET FVALUE=
		ISNULL((
		SELECT
		ISNULL(MAX(CI.FALLOCATE),0)
		FROM T_BUDGET_CASE_ITEM CI WITH(NOLOCK)
		WHERE
		1=1
		AND CI.FID=@LI_BUDGET_CASE_ID
		AND CI.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
		AND CI.FBUDGET_ITEM_ID=T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID
		AND ISNULL(CI.FASSISTANT_ITEM_ID,0)=ISNULL(T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID,0)
		AND ISNULL(CI.FALLOCATE_VALUE_TYPE,0)=1
		),0)
		-
		DBO.F_BUDGET_GET_VALUE('总预算',@LI_BUDGET_CENTER_ID,@LS_FORM_END_DATE,T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID,T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID)
		WHERE
		1=1
		AND FID=@LI_BUDGET_FORM_ID
		AND((
		@LI_FORM_TIME=0
		AND UPPER(FCOLUMN) LIKE UPPER('AY%')
		) OR (
		@LI_FORM_TIME=1
		AND (
		UPPER(FCOLUMN) LIKE UPPER('AY%')
		OR UPPER(FCOLUMN) LIKE UPPER('AS%')
		)
		) OR (
		@LI_FORM_TIME=2
		AND UPPER(FCOLUMN) LIKE UPPER('A%')
		)
		)
		AND EXISTS(
		SELECT
		1
		FROM T_BUDGET_CASE_ITEM CI WITH(NOLOCK)
		WHERE
		1=1
		AND CI.FID=@LI_BUDGET_CASE_ID
		AND CI.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
		AND CI.FBUDGET_ITEM_ID=T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID
		AND ISNULL(CI.FASSISTANT_ITEM_ID,0)=ISNULL(T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID,0)
		AND ISNULL(CI.FALLOCATE_VALUE_TYPE,0)=1
		AND ISNULL(CI.FALLOCATE,0)>0
		)
		
		UPDATE T_BUDGET_FORM_VALUE
		SET FVALUE=0
		WHERE
		1=1
		AND FID=@LI_BUDGET_FORM_ID
		AND ISNULL(T_BUDGET_FORM_VALUE.FVALUE,0)>ISNULL((
		SELECT
		MAX(FD.FYEAR_TARGET)
		FROM T_BUDGET_FORM_DETAIL FD WITH(NOLOCK)
		WHERE
		1=1
		AND FD.FID=T_BUDGET_FORM_VALUE.FID
		AND FD.FBUDGET_ITEM_ID=T_BUDGET_FORM_VALUE.FBUDGET_ITEM_ID
		AND ISNULL(FD.FASSISTANT_ITEM_ID,0)=ISNULL(T_BUDGET_FORM_VALUE.FASSISTANT_ITEM_ID,0)
		),0)
		
		UPDATE T_BUDGET_FORM_VALUE
		SET FVALUE=0
		WHERE
		1=1
		AND FID=@LI_BUDGET_FORM_ID
		AND ISNULL(T_BUDGET_FORM_VALUE.FVALUE,0)<0
		
		IF NOT @@ERROR=0
		BEGIN
			CLOSE C_HEADER_TIME
			DEALLOCATE C_HEADER_TIME
			
			CLOSE C_HEADER
			DEALLOCATE C_HEADER
			
			ROLLBACK TRANSACTION GENBFT
			
			RETURN
		END
		
		-- 增加预算报表明细元素数据
		INSERT INTO T_BUDGET_FORM_ELEMENT(
		FID,
		FBUDGET_ITEM_ID,
		FCOLUMN,
		FNAME,
		FROW,
		FVALUE,
		FREMARK
		)
		SELECT
		@LI_BUDGET_FORM_ID,
		FD.FBUDGET_ITEM_ID,
		FV.FCOLUMN,
		ME.FNAME,
		ME.FROW,
		NULL,
		ME.FREMARK
		FROM T_BUDGET_FORM_VALUE FV WITH(NOLOCK)
		INNER JOIN T_BUDGET_FORM_DETAIL FD WITH(NOLOCK) ON FV.FID=FD.FID AND FV.FBUDGET_ITEM_ID=FD.FBUDGET_ITEM_ID
		INNER JOIN T_BUDGET_MODEL_ELEMENT ME WITH(NOLOCK) ON ME.FBUDGET_ITEM_ID=FD.FBUDGET_ITEM_ID
		WHERE
		1=1
		AND FV.FID=@LI_BUDGET_FORM_ID
		AND FD.FVALUE_TYPE=2
		AND ME.FID=@LI_BUDGET_MODEL_ID
		
		IF NOT @@ERROR=0
		BEGIN
			CLOSE C_HEADER_TIME
			DEALLOCATE C_HEADER_TIME
			
			CLOSE C_HEADER
			DEALLOCATE C_HEADER
			
			ROLLBACK TRANSACTION GENBFT
			
			RETURN
		END
		
		-- 根据报表中的取数公式赋值
		SET @LI_DETAIL_TIME=NULL
		SET @LS_VALUE_FORMULA=NULL
		
		DECLARE C_DETAIL CURSOR FOR
		SELECT
		FD.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
		AI.FASSISTANT_ITEM_ID 'FASSISTANT_ITEM_ID',
		FD.FTIME 'FTIME',
		CONVERT(VARCHAR(4000),FD.FVALUE_FORMULA) 'FVALUE_FORMULA'
		FROM T_BUDGET_FORM_DETAIL FD WITH(NOLOCK)
		INNER JOIN (
		SELECT
		FV.FBUDGET_ITEM_ID 'FBUDGET_ITEM_ID',
		FV.FASSISTANT_ITEM_ID 'FASSISTANT_ITEM_ID'
		FROM T_BUDGET_FORM_VALUE FV WITH(NOLOCK)
		WHERE
		1=1
		AND FV.FID=@LI_BUDGET_FORM_ID
		GROUP BY
		FV.FBUDGET_ITEM_ID,
		FV.FASSISTANT_ITEM_ID
		) AI ON AI.FBUDGET_ITEM_ID=FD.FBUDGET_ITEM_ID
		AND AI.FASSISTANT_ITEM_ID=FD.FASSISTANT_ITEM_ID
		WHERE
		1=1
		AND FD.FID=@LI_BUDGET_FORM_ID
		AND FD.FVALUE_TYPE=3
		ORDER BY FD.FROW
		
		OPEN C_DETAIL
		
		FETCH NEXT FROM C_DETAIL
		INTO
		@LI_BUDGET_ITEM_ID,
		@LI_ASSISTANT_ITEM_ID,
		@LI_DETAIL_TIME,
		@LS_VALUE_FORMULA
		
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			SET @LS_COLUMN=''
			
			DECLARE C_VALUE CURSOR FOR
			SELECT
			FCOLUMN
			FROM T_BUDGET_FORM_VALUE WITH(NOLOCK)
			WHERE
			1=1
			AND FID=@LI_BUDGET_FORM_ID
			AND FBUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
			AND FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
			AND (
			(
			SUBSTRING(FCOLUMN,2,1)='Y'
			AND @LI_DETAIL_TIME=0
			) OR
			(
			SUBSTRING(FCOLUMN,2,1)='S'
			AND @LI_DETAIL_TIME=1
			) OR(
			SUBSTRING(FCOLUMN,2,1)='M'
			AND @LI_DETAIL_TIME=2
			)
			)
			ORDER BY FROW
			
			OPEN C_VALUE
			
			FETCH NEXT FROM C_VALUE
			INTO @LS_COLUMN
			
			WHILE @@FETCH_STATUS=0
			BEGIN
				SET @LS_EXPRESSION=''
				SET @LS_SQL=''
				SET @LI_POSITION_LEFT=0
				SET @LI_POSITION_RIGHT=0
				
				SET @LS_EXPRESSION=@LS_VALUE_FORMULA
				
				SET @LI_POSITION_LEFT=CHARINDEX('[',@LS_EXPRESSION)
				
				IF @LI_POSITION_LEFT>0 AND (NOT @LI_POSITION_LEFT IS NULL)
				BEGIN
					SET @LI_POSITION_RIGHT=CHARINDEX(']',@LS_EXPRESSION,@LI_POSITION_LEFT)
				END
				
				WHILE @LI_POSITION_LEFT>0 AND (NOT @LI_POSITION_LEFT IS NULL)
				AND @LI_POSITION_RIGHT>0 AND (NOT @LI_POSITION_RIGHT IS NULL)
				BEGIN
					
					SET @LS_PARAMETER=''
					SET @LD_TEMP_VALUE=0.00
					SET @LS_TEMP_START_DATE=''
					SET @LS_TEMP_END_DATE=''
					SET @LS_TEMP_COLUMN=''
					
					SET @LS_PARAMETER=SUBSTRING(@LS_EXPRESSION,@LI_POSITION_LEFT,@LI_POSITION_RIGHT - @LI_POSITION_LEFT + 1)
					
					IF @LI_DETAIL_TIME=0
					BEGIN
						SET @LS_TEMP_START_DATE=(
						SELECT
						CONVERT(VARCHAR(10),MIN(FBEGDATE),21)
						FROM T_ACCOUNTPERIOD WITH(NOLOCK)
						WHERE
						1=1
						AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
						)
						
						SET @LS_TEMP_END_DATE=(
						SELECT
						CONVERT(VARCHAR(10),MAX(FENDDATE),21)
						FROM T_ACCOUNTPERIOD WITH(NOLOCK)
						WHERE
						1=1
						AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
						)
					END
					IF @LI_DETAIL_TIME=1
					BEGIN
						IF RIGHT(@LS_COLUMN,2)='01'
						BEGIN
							SET @LS_TEMP_START_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MIN(FBEGDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('1','2','3')
							)
							
							SET @LS_TEMP_END_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MAX(FENDDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('1','2','3')
							)
						END
						IF RIGHT(@LS_COLUMN,2)='02'
						BEGIN
							SET @LS_TEMP_START_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MIN(FBEGDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('4','5','6')
							)
							
							SET @LS_TEMP_END_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MAX(FENDDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('4','5','6')
							)
						END
						IF RIGHT(@LS_COLUMN,2)='03'
						BEGIN
							SET @LS_TEMP_START_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MIN(FBEGDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('7','8','9')
							)
							
							SET @LS_TEMP_END_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MAX(FENDDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('7','8','9')
							)
						END
						IF RIGHT(@LS_COLUMN,2)='04'
						BEGIN
							SET @LS_TEMP_START_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MIN(FBEGDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('10','11','12')
							)
							
							SET @LS_TEMP_END_DATE=(
							SELECT
							CONVERT(VARCHAR(10),MAX(FENDDATE),21)
							FROM T_ACCOUNTPERIOD WITH(NOLOCK)
							WHERE
							1=1
							AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
							AND CONVERT(VARCHAR(2),FPERIOD) IN ('10','11','12')
							)
						END
					END
					IF @LI_DETAIL_TIME=2
					BEGIN
						SET @LS_TEMP_START_DATE=(
						SELECT
						CONVERT(VARCHAR(10),MIN(FBEGDATE),21)
						FROM T_ACCOUNTPERIOD WITH(NOLOCK)
						WHERE
						1=1
						AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
						AND CONVERT(VARCHAR(2),FPERIOD)=RIGHT(@LS_PARAMETER,2)
						)
						
						SET @LS_TEMP_END_DATE=(
						SELECT
						CONVERT(VARCHAR(10),MAX(FENDDATE),21)
						FROM T_ACCOUNTPERIOD WITH(NOLOCK)
						WHERE
						1=1
						AND CONVERT(VARCHAR(4),FYEAR)=SUBSTRING(@LS_PARAMETER,2,4)
						AND CONVERT(VARCHAR(2),FPERIOD)=RIGHT(@LS_PARAMETER,2)
						)
					END
					
					IF SUBSTRING(@LS_PARAMETER,9,2)='预算'
					BEGIN
						SET @LS_TEMP_COLUMN=LEFT(@LS_COLUMN,8)+SUBSTRING(@LS_PARAMETER,2,4)+RIGHT(@LS_COLUMN,2)
						
						SET @LD_TEMP_VALUE=ISNULL(
						(
						SELECT
						SUM(V.FVALUE)
						FROM T_BUDGET_FORM_VALUE V WITH(NOLOCK)
						INNER JOIN T_BUDGET_FORM_HEADER H WITH(NOLOCK) ON V.FID=H.FID
						WHERE
						1=1
						AND H.FBUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
						AND V.FBUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
						AND V.FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
						AND V.FCOLUMN=@LS_TEMP_COLUMN
						AND ISNULL(H.FSTATE,0)=2
						),0)
						
					END
					IF SUBSTRING(@LS_PARAMETER,9,2)='下拨'
					BEGIN
						SET @LD_TEMP_VALUE=ISNULL(
						(
						SELECT
						SUM(D.FVALUE)
						FROM T_BUDGET_ALLOCATE_DETAIL D WITH(NOLOCK)
						INNER JOIN T_BUDGET_ALLOCATE_HEADER H WITH(NOLOCK) ON D.FID=H.FID
						WHERE
						1=1
						AND H.FVALUE_BUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
						AND D.FBUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
						AND D.FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
						AND CONVERT(VARCHAR(10),H.FDATE,20)>=@LS_TEMP_START_DATE
						AND CONVERT(VARCHAR(10),H.FDATE,20)<=@LS_TEMP_END_DATE
						AND ISNULL(H.FSTATE,0)=2
						),0)
						
					END
					IF SUBSTRING(@LS_PARAMETER,9,2)='报账'
					BEGIN
						SET @LD_TEMP_VALUE=ISNULL(
						(
						SELECT
						SUM(D.FAMOUNT)
						FROM T_BUDGET_REPORT_DETAIL D WITH(NOLOCK)
						INNER JOIN T_BUDGET_REPORT_HEADER H WITH(NOLOCK) ON D.FID=H.FID
						WHERE
						1=1
						AND H.FVALUE_BUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
						AND D.FBUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
						AND D.FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
						AND CONVERT(VARCHAR(10),H.FDATE,20)>=@LS_TEMP_START_DATE
						AND CONVERT(VARCHAR(10),H.FDATE,20)<=@LS_TEMP_END_DATE
						AND ISNULL(H.FSTATE,0)=2
						),0)
						+
						ISNULL(
						(
						SELECT
						SUM(D.FAMOUNT)
						FROM T_BT_D D WITH(NOLOCK)
						INNER JOIN T_BT H WITH(NOLOCK) ON D.FID=H.FID
						WHERE
						1=1
						AND H.FVALUE_BUDGET_CENTER_ID=@LI_BUDGET_CENTER_ID
						AND H.FBUDGETITEMID=@LI_BUDGET_ITEM_ID
						AND H.FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
						AND CONVERT(VARCHAR(10),H.FPERIOD,20)>=@LS_TEMP_START_DATE
						AND CONVERT(VARCHAR(10),H.FPERIOD,20)<=@LS_TEMP_END_DATE
						AND ISNULL(H.FSTATE,0)=2
						),0)
					END
					
					IF @LD_TEMP_VALUE IS NULL
					BEGIN
						SET @LD_TEMP_VALUE=0
					END
					
					SET @LS_EXPRESSION=REPLACE(@LS_EXPRESSION,@LS_PARAMETER,CONVERT(VARCHAR(200),@LD_TEMP_VALUE))
					
					SET @LI_POSITION_LEFT=0
					SET @LI_POSITION_RIGHT=0
					
					SET @LI_POSITION_LEFT=CHARINDEX('[',@LS_EXPRESSION)
					
					IF @LI_POSITION_LEFT>0 AND (NOT @LI_POSITION_LEFT IS NULL)
					BEGIN
						SET @LI_POSITION_RIGHT=CHARINDEX(']',@LS_EXPRESSION,@LI_POSITION_LEFT)
					END
				END
				
				IF ISNULL(@LS_EXPRESSION,'')<>''
				BEGIN
					SET @LS_SQL='
					UPDATE T_BUDGET_FORM_VALUE
					SET
					FVALUE='+@LS_EXPRESSION+' 
					WHERE
					FID='+CONVERT(VARCHAR(200),@LI_BUDGET_FORM_ID)+'
					AND FBUDGET_ITEM_ID='+CONVERT(VARCHAR(200),@LI_BUDGET_ITEM_ID)+'
					AND FASSISTANT_ITEM_ID='+CONVERT(VARCHAR(200),@LI_ASSISTANT_ITEM_ID)+'
					AND FCOLUMN='''+@LS_COLUMN+''''
					
					EXECUTE DBO.SP_EXECUTESQL @LS_SQL
				END
				
				FETCH NEXT FROM C_VALUE
				INTO @LS_COLUMN
			END
			
			CLOSE C_VALUE
			DEALLOCATE C_VALUE
			
			-- 更新报表中的上级预算项目以及年度，季度金额
			SET @LS_COLUMN=''
			SET @LD_TEMP_VALUE=0.00
			SET @LI_TEMP_BUDGET_ITEM_ID=0
			
			DECLARE C_VALUE CURSOR FOR
			SELECT
			FCOLUMN 'FCOLUMN',
			ISNULL(FVALUE,0) 'FVALUE'
			FROM T_BUDGET_FORM_VALUE WITH(NOLOCK)
			WHERE
			1=1
			AND FID=@LI_BUDGET_FORM_ID
			AND FBUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
			AND FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
			AND (
			(
			SUBSTRING(FCOLUMN,2,1)='Y'
			AND @LI_DETAIL_TIME=0
			) OR
			(
			SUBSTRING(FCOLUMN,2,1)='S'
			AND @LI_DETAIL_TIME=1
			) OR
			(
			SUBSTRING(FCOLUMN,2,1)='M'
			AND @LI_DETAIL_TIME=2
			)
			)
			AND ISNULL(FVALUE,0)>0
			ORDER BY FROW
			
			OPEN C_VALUE
			
			FETCH NEXT FROM C_VALUE
			INTO
			@LS_COLUMN,
			@LD_TEMP_VALUE
			
			WHILE @@FETCH_STATUS=0
			BEGIN
				SET @LS_TEMP_TIME=''
				SET @LS_TEMP_MONTH=''
				
				SET @LS_TEMP_TIME=SUBSTRING(@LS_COLUMN,2,1)
				SET @LS_TEMP_MONTH=RIGHT(@LS_COLUMN,2)
				
				SET @LI_TEMP_BUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
				
				WHILE @LI_TEMP_BUDGET_ITEM_ID>0 AND (NOT @LI_TEMP_BUDGET_ITEM_ID IS NULL)
				BEGIN
					
					SET @LS_PARAMETER=''
					
					IF EXISTS(
					SELECT
					*
					FROM T_BUDGET_FORM_DETAIL WITH(NOLOCK)
					WHERE
					1=1
					AND FID=@LI_BUDGET_FORM_ID
					AND FBUDGET_ITEM_ID=@LI_TEMP_BUDGET_ITEM_ID
					AND FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
					)
					BEGIN
						IF NOT @LI_TEMP_BUDGET_ITEM_ID=@LI_BUDGET_ITEM_ID
						BEGIN
							UPDATE T_BUDGET_FORM_VALUE
							SET
							FVALUE=ISNULL(FVALUE,0)+@LD_TEMP_VALUE
							WHERE
							1=1
							AND FID=@LI_BUDGET_FORM_ID
							AND FBUDGET_ITEM_ID=@LI_TEMP_BUDGET_ITEM_ID
							AND FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
							AND FCOLUMN=@LS_COLUMN
						END
						
						IF @LS_TEMP_TIME IN ('S','M')
						BEGIN
							SET @LS_PARAMETER=LEFT(@LS_COLUMN,1)+'Y000000'+SUBSTRING(@LS_COLUMN,9,4)+'00'
							
							UPDATE T_BUDGET_FORM_VALUE
							SET
							FVALUE=ISNULL(FVALUE,0)+@LD_TEMP_VALUE
							WHERE
							1=1
							AND FID=@LI_BUDGET_FORM_ID
							AND FBUDGET_ITEM_ID=@LI_TEMP_BUDGET_ITEM_ID
							AND FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
							AND FCOLUMN=@LS_PARAMETER
						END
						
						IF @LS_TEMP_TIME='M'
						BEGIN
							IF @LS_TEMP_MONTH IN ('01','02','03')
							BEGIN
								SET @LS_PARAMETER=LEFT(@LS_COLUMN,1)+'S000000'+SUBSTRING(@LS_COLUMN,9,4)+'01'
							END
							IF @LS_TEMP_MONTH IN ('04','05','06')
							BEGIN
								SET @LS_PARAMETER=LEFT(@LS_COLUMN,1)+'S000000'+SUBSTRING(@LS_COLUMN,9,4)+'02'
							END
							IF @LS_TEMP_MONTH IN ('07','08','09')
							BEGIN
								SET @LS_PARAMETER=LEFT(@LS_COLUMN,1)+'S000000'+SUBSTRING(@LS_COLUMN,9,4)+'03'
							END
							IF @LS_TEMP_MONTH IN ('10','11','12')
							BEGIN
								SET @LS_PARAMETER=LEFT(@LS_COLUMN,1)+'S000000'+SUBSTRING(@LS_COLUMN,9,4)+'04'
							END
							
							UPDATE T_BUDGET_FORM_VALUE
							SET
							FVALUE=ISNULL(FVALUE,0)+@LD_TEMP_VALUE
							WHERE
							1=1
							AND FID=@LI_BUDGET_FORM_ID
							AND FBUDGET_ITEM_ID=@LI_TEMP_BUDGET_ITEM_ID
							AND FASSISTANT_ITEM_ID=@LI_ASSISTANT_ITEM_ID
							AND FCOLUMN=@LS_PARAMETER
						END
					END
					
					SET @LI_TEMP_BUDGET_ITEM_ID=(
					SELECT
					FPARENT_ID
					FROM T_BUDGET_ITEM WITH(NOLOCK)
					WHERE
					1=1
					AND FID=@LI_TEMP_BUDGET_ITEM_ID
					)
				END
				
				FETCH NEXT FROM C_VALUE
				INTO
				@LS_COLUMN,
				@LD_TEMP_VALUE
				
			END
			
			CLOSE C_VALUE
			DEALLOCATE C_VALUE
			
			FETCH NEXT FROM C_DETAIL
			INTO
			@LI_BUDGET_ITEM_ID,
			@LI_ASSISTANT_ITEM_ID,
			@LI_DETAIL_TIME,
			@LS_VALUE_FORMULA
		END
		
		CLOSE C_DETAIL
		DEALLOCATE C_DETAIL
		
		FETCH NEXT FROM C_HEADER_TIME
		INTO @LS_FORM_START_DATE,@LS_FORM_END_DATE,@LI_FORM_TIME
	END
	
	CLOSE C_HEADER_TIME
	DEALLOCATE C_HEADER_TIME
	
	FETCH NEXT FROM C_HEADER
	INTO
	@LI_BUDGET_CASE_ID,
	@LD_START_DATE,
	@LD_END_DATE,
	@LI_YEAR_TARGET,
	@LD_YEAR_TARGET_START_DATE,
	@LD_YEAR_TARGET_END_DATE,
	@LI_BUDGET_MODEL_ID,
	@LS_BUDGET_MODEL_CODE,
	@LS_BUDGET_MODEL_NAME,
	@LI_BUDGET_CENTER_ID,
	@LS_BUDGET_CENTER_CODE,
	@LS_BUDGET_CENTER_NAME,
	@LI_FORM_TIME
END

DROP TABLE #T_TEMP_BUDGET_ITEM

DROP TABLE #T_TEMP_FORM_PERIOD

CLOSE C_HEADER
DEALLOCATE C_HEADER

UPDATE T_TABLEID
SET
FCURRID=ISNULL((
SELECT
MAX(FID)
FROM T_BUDGET_FORM_HEADER WITH(NOLOCK)
),1000)
WHERE
FTABLE='T_BUDGET_FORM_HEADER'

COMMIT TRANSACTION GENBFT

End
